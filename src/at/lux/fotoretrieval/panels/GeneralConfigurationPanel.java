/*
 * GeneralConfigurationPanel.java
 *
 * Created on 20. Jänner 2006, 08:13
 */

package at.lux.fotoretrieval.panels;

/**
 *
 * @author  mlux
 */
public class GeneralConfigurationPanel extends javax.swing.JPanel {
    
    /** Creates new form GeneralConfigurationPanel */
    public GeneralConfigurationPanel() {
        initComponents();
        frameTitle.title.setText("General Configuration");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        titleLabelResultList = new javax.swing.JLabel();
        maxResultsLabel = new javax.swing.JLabel();
        maxResults = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        c1 = new javax.swing.JTextField();
        c2 = new javax.swing.JTextField();
        c3 = new javax.swing.JTextField();
        c4 = new javax.swing.JTextField();
        invisibleCentreNode = new javax.swing.JCheckBox();
        normalizeMovementVector = new javax.swing.JCheckBox();
        scaleDownnSpace = new javax.swing.JCheckBox();
        frameTitle = new at.lux.fotoannotation.panels.components.FrameTitle();
        useDerby = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        browserWindows = new javax.swing.JTextField();
        browserLinux = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        titleLabelResultList.setFont(new java.awt.Font("Tahoma", 1, 11));
        titleLabelResultList.setText("Retrieval Options:");

        maxResultsLabel.setText("Maximum results:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setText("Graph Visualization:");

        jLabel4.setText("c1:");

        jLabel5.setText("c2:");

        jLabel6.setText("c3:");

        jLabel7.setText("c4:");

        c1.setEditable(false);
        c1.setToolTipText("c1 is multiplied with the logarithmic attraction force: force = c1 * Math.log(nodeA.distance(nodeB) / c2)");

        c2.setEditable(false);
        c2.setToolTipText("c2 defines how much nodes attract each other: divisor of the distance: force = c1 * Math.log(nodeA.distance(nodeB) / c2)");

        c3.setEditable(false);
        c3.setToolTipText("c3 defines how much nodes repel each other: force = -c3 / Math.sqrt(nodeA.distance(nodeB));");

        c4.setEditable(false);
        c4.setToolTipText("c4 defines how wide to step (the length of the movement vector)");

        invisibleCentreNode.setText("has invisible centre node");
        invisibleCentreNode.setToolTipText("Defines if an invisible node in the centre of the layout should be there to attract and repel other nodes.");
        invisibleCentreNode.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        invisibleCentreNode.setEnabled(false);
        invisibleCentreNode.setFocusPainted(false);
        invisibleCentreNode.setMargin(new java.awt.Insets(0, 0, 0, 0));

        normalizeMovementVector.setText("normalize movement vector");
        normalizeMovementVector.setToolTipText("Normalizes movement vector to slow down movement of nodes. Typically not used.");
        normalizeMovementVector.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        normalizeMovementVector.setEnabled(false);
        normalizeMovementVector.setFocusPainted(false);
        normalizeMovementVector.setMargin(new java.awt.Insets(0, 0, 0, 0));

        scaleDownnSpace.setText("scale down space");
        scaleDownnSpace.setToolTipText("Scales down the visualization step in each iteration to a normalized plane. Typically not used.");
        scaleDownnSpace.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        scaleDownnSpace.setEnabled(false);
        scaleDownnSpace.setFocusPainted(false);
        scaleDownnSpace.setMargin(new java.awt.Insets(0, 0, 0, 0));

        useDerby.setText("use Derby DB for content based image retrieval");
        useDerby.setToolTipText("Defines if content based image retrieval should happen in the database (Derby is the specific implementation). If not selected it happens based on files.");
        useDerby.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        useDerby.setFocusPainted(false);
        useDerby.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Browser Commands:");

        browserWindows.setToolTipText("Command for opening a browser on windows.");
        browserWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browserWindowsActionPerformed(evt);
            }
        });

        browserLinux.setToolTipText("Command for opening a browser on Linux, BSD, etc.");

        jLabel2.setText("Windows:");

        jLabel8.setText("Other OS:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel8))
                        .add(14, 14, 14)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(browserWindows, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, browserLinux, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)))
                    .add(frameTitle, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .add(titleLabelResultList)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(useDerby))
                            .add(layout.createSequentialGroup()
                                .add(maxResultsLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(maxResults, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE))))
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(c2))
                            .add(layout.createSequentialGroup()
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(c1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(c3))
                            .add(layout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(c4)))
                        .add(38, 38, 38)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(invisibleCentreNode)
                            .add(normalizeMovementVector)
                            .add(scaleDownnSpace)))
                    .add(jLabel3)
                    .add(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(frameTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(titleLabelResultList)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxResultsLabel)
                    .add(maxResults, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(useDerby)
                .add(14, 14, 14)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(c1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(invisibleCentreNode))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(c2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(normalizeMovementVector))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(c3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(scaleDownnSpace))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(c4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(browserWindows, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(browserLinux, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browserWindowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browserWindowsActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_browserWindowsActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField browserLinux;
    public javax.swing.JTextField browserWindows;
    public javax.swing.JTextField c1;
    public javax.swing.JTextField c2;
    public javax.swing.JTextField c3;
    public javax.swing.JTextField c4;
    public at.lux.fotoannotation.panels.components.FrameTitle frameTitle;
    public javax.swing.JCheckBox invisibleCentreNode;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JTextField maxResults;
    public javax.swing.JLabel maxResultsLabel;
    public javax.swing.JCheckBox normalizeMovementVector;
    public javax.swing.JCheckBox scaleDownnSpace;
    public javax.swing.JLabel titleLabelResultList;
    public javax.swing.JCheckBox useDerby;
    // End of variables declaration//GEN-END:variables
    
}
